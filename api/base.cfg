[buildout]
index = https://pypi.org/simple/
parts = 
    instance 
    plonesite 
    robot-server
    dependencies
    code-analysis
    test
    test-coverage
    update-translations
    find-untranslated
versions = versions

extensions = mr.developer
auto-checkout = *

[sources]
kitconcept.voltoformbuilder = fs kitconcept.voltoformbuilder
# kitconcept.volto = git https://github.com/kitconcept/kitconcept.volto.git branch=master
# plone.rest = git git@github.com:plone/plone.rest.git branch=master
# plone.restapi = git git://github.com/plone/plone.restapi.git pushurl=git@github.com:plone/plone.restapi.git branch=master

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    kitconcept.volto
    kitconcept.voltoformbuilder [test]

zcml-additional =
  <configure xmlns="http://namespaces.zope.org/zope"
             xmlns:plone="http://namespaces.plone.org/plone">
  <plone:CORSPolicy
    allow_origin="http://localhost:3000,http://127.0.0.1:3000"
    allow_methods="DELETE,GET,OPTIONS,PATCH,POST,PUT"
    allow_credentials="true"
    expose_headers="Content-Length,X-My-Header"
    allow_headers="Accept,Authorization,Content-Type,X-Custom-Header,Origin"
    max_age="3600"
    />
  </configure>

[robot-server]
recipe = zc.recipe.egg
eggs =
    ${instance:eggs}
    collective.MockMailHost
    plone.app.robotframework
    robotframework-debuglibrary
    robotframework-requests
    robotframework-react
    robotframework-seleniumlibrary
    robotframework-selenium2library
    robotframework-webpack
scripts =
    robot-server
    pybot

[plonesite]
recipe = collective.recipe.plonesite
site-id = Plone
instance = instance
profiles-initial = Products.CMFPlone:dependencies
profiles =
    plonetheme.barceloneta:default
    plone.app.contenttypes:plone-content
    kitconcept.volto:default-homepage
upgrade-portal = False
upgrade-all-profiles = False
site-replace = True


[dependencies]
recipe = zc.recipe.egg
eggs =
    i18ndude
    zest.pocompile
    zest.releaser[recommended]
    zestreleaser.towncrier
    towncrier
    readme
    docutils
    coverage
    pyroma

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-max-line-length = 200
flake8-exclude=bootstrap.py,bootstrap-buildout.py,docs,bin,*.egg,setup.py,overrides
flake8-max-complexity = 20
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-print
# additional pep8/flake8 rules, see docs for details
# https://pep8.readthedocs.io/en/1.4.6/intro.html#error-codes
# - E123: closing bracket does not match indentation of opening bracketâ€™s line
# flake8-select = E123

[test]
recipe = collective.xmltestreport
eggs = ${instance:eggs}
defaults = ['-s', 'kitconcept.voltoformbuilder', '--auto-color', '--auto-progress']
environment = environment

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[environment]
ROBOT_SELENIUM2LIBRARY_RUN_ON_FAILURE = Capture page screenshot and log source

[update-translations]
recipe = collective.recipe.template
input = inline:
    domain=kitconcept.voltoformbuilder
    maindir=src/kitconcept/voltoformbuilder
    locales=$maindir/locales
    echo "Update translations for $domain"
    if [ ! -f $locales/$domain.pot ]; then
        # Create .pot file if it does not exist yet
        touch $locales/$domain.pot
    fi
    if [ ! -f $locales/de/LC_MESSAGES ]; then
        # Create de/LC_MESSAGES directory if it does not exist yet
        mkdir -p $locales/de/LC_MESSAGES
    fi
    if [ ! -f $locales/de/LC_MESSAGES/$domain.po ]; then
        # Create .po file if it does not exist yet
        touch $locales/de/LC_MESSAGES/$domain.po
    fi
    ${buildout:directory}/bin/i18ndude rebuild-pot --pot $locales/$domain.pot --create $domain $maindir
    ${buildout:directory}/bin/i18ndude sync --pot $locales/$domain.pot $locales/*/LC_MESSAGES/$domain.po
output = ${buildout:directory}/bin/updatetranslations
mode = 755

[find-untranslated]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/i18ndude find-untranslated `find -L src/kitconcept.voltoformbuilder -regex ".*\.[cz]?pt"`
output = ${buildout:directory}/bin/find-untranslated
mode = 755

[versions]
setuptools =
zc.buildout =
plone.restapi =

kitconcept.voltoformbuilder =

# previous version format in a different way
black = 20.8b1

# Error: The requirement ('virtualenv>=20.0.35') is not allowed by your [versions] constraint (20.0.26)
virtualenv = 20.0.35

# Error: The requirement ('pep517>=0.9') is not allowed by your [versions] constraint (0.8.2)
pep517 = 0.9.1

# Error: The requirement ('importlib-metadata>=1') is not allowed by your [versions] constraint (0.23)
importlib-metadata = 2.0.0
