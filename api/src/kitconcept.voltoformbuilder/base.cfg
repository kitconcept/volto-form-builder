[buildout]
index = https://pypi.org/simple/
parts =
    instance
    dependencies
    code-analysis
    test
    test-coverage
    update-translations
    find-untranslated
versions = versions
develop = .

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    kitconcept.voltoformbuilder [test]

[dependencies]
recipe = zc.recipe.egg
eggs =
    i18ndude
    zest.pocompile
    zest.releaser[recommended]
    zestreleaser.towncrier
    towncrier
    readme
    docutils
    coverage
    pyroma

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-max-line-length = 200
flake8-exclude=bootstrap.py,bootstrap-buildout.py,docs,bin,*.egg,setup.py,overrides
flake8-max-complexity = 20
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-print
# additional pep8/flake8 rules, see docs for details
# https://pep8.readthedocs.io/en/1.4.6/intro.html#error-codes
# - E123: closing bracket does not match indentation of opening bracketâ€™s line
# flake8-select = E123

[test]
recipe = collective.xmltestreport
eggs = ${instance:eggs}
defaults = ['-s', 'kitconcept.voltoformbuilder', '--auto-color', '--auto-progress']
environment = environment

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[environment]
ROBOT_SELENIUM2LIBRARY_RUN_ON_FAILURE = Capture page screenshot and log source

[update-translations]
recipe = collective.recipe.template
input = inline:
    domain=kitconcept.voltoformbuilder
    maindir=src/kitconcept/voltoformbuilder
    locales=$maindir/locales
    echo "Update translations for $domain"
    if [ ! -f $locales/$domain.pot ]; then
        # Create .pot file if it does not exist yet
        touch $locales/$domain.pot
    fi
    if [ ! -f $locales/de/LC_MESSAGES ]; then
        # Create de/LC_MESSAGES directory if it does not exist yet
        mkdir -p $locales/de/LC_MESSAGES
    fi
    if [ ! -f $locales/de/LC_MESSAGES/$domain.po ]; then
        # Create .po file if it does not exist yet
        touch $locales/de/LC_MESSAGES/$domain.po
    fi
    ${buildout:directory}/bin/i18ndude rebuild-pot --pot $locales/$domain.pot --create $domain $maindir
    ${buildout:directory}/bin/i18ndude sync --pot $locales/$domain.pot $locales/*/LC_MESSAGES/$domain.po
output = ${buildout:directory}/bin/updatetranslations
mode = 755

[find-untranslated]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/i18ndude find-untranslated `find -L src/plone/restapi -regex ".*\.[cz]?pt"`
output = ${buildout:directory}/bin/find-untranslated
mode = 755

[versions]
kitconcept.voltoformbuilder =
setuptools =
zc.buildout =
