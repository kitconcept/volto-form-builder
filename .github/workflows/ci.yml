name: Volto Form Builder
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2

      # node setup
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # node cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # node install
      - run: (cd demo && yarn install --frozen-lockfile)

      # node code analysis
      - run: (cd demo && yarn run prettier)
      # - run: yarn run lint
      # - run: yarn run code-analysis:i18n

      # node test
      # - run: yarn test:ci

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # python cache
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # python install
      - run: (cd demo/api && pip install virtualenv)
      - name: pip install
        working-directory: demo/api
        run: (cd demo/api && pip install -r requirements.txt)
      - name: buildout
        working-directory: api
        run: (cd demo/api && buildout)
        env:
          CI: true

      # Run Cypress tests
      - name: Cypress acceptance tests
        run: (cd demo && yarn ci:cypress:run)

      # Upload Cypress screenshots
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Upload Cypress videos
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

      # Bundlewatch
      # - uses: jackyef/bundlewatch-gh-action@master
      #   with:
      #     bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
